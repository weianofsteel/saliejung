{"version":3,"sources":["../../lib/get-package-version.ts"],"names":["getPackageVersion","cwd","name","configurationPath","content","fs","readFile","packageJson","JSON5","parse","dependencies","devDependencies","cwd2","endsWith","path","posix","sep","win32","targetPath","targetContent","version"],"mappings":"iFACA,0EACA,kDACA,sBACA,sEACA,iD,w4BALA;AAOO,cAAeA,CAAAA,iBAAf,CAAiC,CACtCC,GADsC,CAEtCC,IAFsC,CAAjC,CAMoB,CACzB,KAAMC,CAAAA,iBAAqC,CAAG,KAAM,oBAAO,cAAP,CAAuB,CACzEF,GADyE,CAAvB,CAApD,CAGA,GAAI,CAACE,iBAAL,CAAwB,CACtB,MAAO,KAAP,CACD,CAED,KAAMC,CAAAA,OAAO,CAAG,KAAMC,cAAGC,QAAH,CAAYH,iBAAZ,CAA+B,OAA/B,CAAtB,CACA,KAAMI,CAAAA,WAAgB,CAAGC,cAAMC,KAAN,CAAYL,OAAZ,CAAzB,CAEA,KAAM,CAAEM,YAAY,CAAG,EAAjB,CAAqBC,eAAe,CAAG,EAAvC,EAA8CJ,WAAW,EAAI,EAAnE,CACA,GAAI,EAAEG,YAAY,CAACR,IAAD,CAAZ,EAAsBS,eAAe,CAACT,IAAD,CAAvC,CAAJ,CAAoD,CAClD,MAAO,KAAP,CACD,CAED,KAAMU,CAAAA,IAAI,CACRX,GAAG,CAACY,QAAJ,CAAaC,IAAI,CAACC,KAAL,CAAWC,GAAxB,GAAgCf,GAAG,CAACY,QAAJ,CAAaC,IAAI,CAACG,KAAL,CAAWD,GAAxB,CAAhC,CACIf,GADJ,CAEK,GAAEA,GAAI,GAHb,CAKA,GAAI,0BACF,KAAMiB,CAAAA,UAAU,CAAG,mCAAgB,GAAEhB,IAAK,eAAvB,CAAuCU,IAAvC,CAAnB,CACA,KAAMO,CAAAA,aAAa,CAAG,KAAMd,cAAGC,QAAH,CAAYY,UAAZ,CAAwB,OAAxB,CAA5B,CACA,4BAAOV,cAAMC,KAAN,CAAYU,aAAZ,EAA2BC,OAAlC,6DAA6C,IAA7C,CACD,CAAC,cAAM,CACN,MAAO,KAAP,CACD,CACF","sourcesContent":["//  issuer.endsWith(path.posix.sep) || issuer.endsWith(path.win32.sep)\nimport findUp from 'next/dist/compiled/find-up'\nimport * as path from 'path'\nimport { promises as fs } from 'fs'\nimport JSON5 from 'next/dist/compiled/json5'\nimport { resolveRequest } from './resolve-request'\n\nexport async function getPackageVersion({\n  cwd,\n  name,\n}: {\n  cwd: string\n  name: string\n}): Promise<string | null> {\n  const configurationPath: string | undefined = await findUp('package.json', {\n    cwd,\n  })\n  if (!configurationPath) {\n    return null\n  }\n\n  const content = await fs.readFile(configurationPath, 'utf-8')\n  const packageJson: any = JSON5.parse(content)\n\n  const { dependencies = {}, devDependencies = {} } = packageJson || {}\n  if (!(dependencies[name] || devDependencies[name])) {\n    return null\n  }\n\n  const cwd2 =\n    cwd.endsWith(path.posix.sep) || cwd.endsWith(path.win32.sep)\n      ? cwd\n      : `${cwd}/`\n\n  try {\n    const targetPath = resolveRequest(`${name}/package.json`, cwd2)\n    const targetContent = await fs.readFile(targetPath, 'utf-8')\n    return JSON5.parse(targetContent).version ?? null\n  } catch {\n    return null\n  }\n}\n"]}