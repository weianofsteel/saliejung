{"ast":null,"code":"var _jsxFileName = \"/Users/wangweian/Desktop/saliejung/component/Public/Carousel02.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport Button from '@material-ui/core/Button';\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled';\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\nimport IconButton from '@material-ui/core/IconButton';\n\nclass CustomizeCarousel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0\n    };\n    this.handleTimer = this.handleTimer.bind(this);\n    this.timer = this.timer.bind(this);\n    this.handleNext = this.handleNext.bind(this);\n    this.handleBack = this.handleBack.bind(this);\n  }\n\n  componentDidMount() {\n    this.handleTimer();\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.handleTimer);\n  }\n\n  handleTimer() {\n    setInterval(() => {\n      this.timer();\n    }, 1000);\n  }\n\n  timer() {\n    this.setState({\n      count: this.state.count + 1\n    });\n  }\n\n  handleNext() {\n    if (!this.props.rotateBy) {\n      this.setState({\n        count: this.state.count + 3\n      });\n    } else {\n      this.setState({\n        count: this.state.count + this.props.rotateBy\n      });\n    }\n  }\n\n  handleBack() {\n    if (!this.props.rotateBy) {\n      if (this.state.count > 3) {\n        this.setState({\n          count: this.state.count - 3\n        });\n      } else {\n        this.setState({\n          count: 0\n        });\n      }\n    } else {\n      if (this.state.count > 3) {\n        this.setState({\n          count: this.state.count - this.props.rotateBy\n        });\n      } else {\n        this.setState({\n          count: 0\n        });\n      }\n    }\n  }\n\n  render() {\n    const {\n      imgsrc,\n      rotateBy,\n      width,\n      height,\n      controlButton,\n      navigateButton\n    } = this.props;\n    const list = [];\n\n    if (!imgsrc) {\n      return list;\n    } else {\n      if (!rotateBy) {\n        for (let i = 0; i <= imgsrc.length - 1; i++) {\n          list.push(__jsx(\"div\", {\n            key: i,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 25\n            }\n          }, parseInt(this.state.count / 3) % imgsrc.length === i ? __jsx(\"div\", {\n            style: {\n              width: width ? width : '600px',\n              height: height ? height : '500px'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 33\n            }\n          }, __jsx(\"img\", {\n            src: imgsrc[i],\n            style: {\n              width: '100%',\n              height: '100%'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 37\n            }\n          })) : ''));\n        }\n      } else {\n        for (let i = 0; i <= imgsrc.length - 1; i++) {\n          list.push(__jsx(\"div\", {\n            key: i,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 25\n            }\n          }, parseInt(this.state.count / rotateBy) % imgsrc.length === i ? __jsx(\"div\", {\n            style: {\n              width: width ? width : '600px',\n              height: height ? height : '500px'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 33\n            }\n          }, __jsx(\"img\", {\n            src: imgsrc[i],\n            style: {\n              width: '100%',\n              height: '100%'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 37\n            }\n          })) : ''));\n        }\n      }\n    }\n\n    const RadioNavigation = [];\n\n    if (!imgsrc) {\n      return RadioNavigation;\n    } else {\n      if (!rotateBy) {\n        for (let i = 0; i <= imgsrc.length - 1; i++) {\n          RadioNavigation.push(__jsx(\"div\", {\n            key: i,\n            style: {\n              display: 'inline'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 25\n            }\n          }, parseInt(this.state.count / 3) % imgsrc.length === i ? __jsx(IconButton, {\n            onClick: () => {\n              this.setState({\n                count: 3 * i\n              });\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 33\n            }\n          }, __jsx(PlayCircleFilledIcon, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 37\n            }\n          })) : __jsx(IconButton, {\n            onClick: () => {\n              this.setState({\n                count: 3 * i\n              });\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 33\n            }\n          }, __jsx(RadioButtonUncheckedIcon, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 37\n            }\n          }))));\n        }\n      } else {\n        for (let i = 0; i <= imgsrc.length - 1; i++) {\n          RadioNavigation.push(__jsx(\"div\", {\n            key: i,\n            style: {\n              display: 'inline'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 25\n            }\n          }, parseInt(this.state.count / rotateBy) % imgsrc.length === i ? __jsx(IconButton, {\n            onClick: () => {\n              this.setState({\n                count: rotateBy * i\n              });\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 33\n            }\n          }, __jsx(PlayCircleFilledIcon, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 37\n            }\n          })) : __jsx(IconButton, {\n            onClick: () => {\n              this.setState({\n                count: rotateBy * i\n              });\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 33\n            }\n          }, __jsx(RadioButtonUncheckedIcon, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 37\n            }\n          }))));\n        }\n      }\n    }\n\n    return __jsx(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }\n    }, __jsx(Grid, {\n      container: true,\n      justify: \"center\",\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }\n    }, __jsx(Grid, {\n      contaner: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }\n    }, __jsx(Grid, {\n      item: true,\n      xs: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 21\n      }\n    }, controlButton === true ? __jsx(Button, {\n      style: {\n        margin: 'auto 0'\n      },\n      onClick: this.handleBack,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 29\n      }\n    }, __jsx(ArrowBackIosIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 33\n      }\n    })) : ''), __jsx(Grid, {\n      item: true,\n      xs: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 21\n      }\n    }, list), __jsx(Grid, {\n      item: true,\n      xs: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 21\n      }\n    }, controlButton === true ? __jsx(Button, {\n      style: {\n        margin: 'auto 0'\n      },\n      onClick: this.handleNext,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 29\n      }\n    }, __jsx(ArrowForwardIosIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 33\n      }\n    })) : ''))), __jsx(Grid, {\n      container: true,\n      justify: \"center\",\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 13\n      }\n    }, navigateButton === true ? __jsx(Grid, {\n      item: true,\n      xs: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }\n    }, RadioNavigation) : ''));\n  }\n\n}\n\nexport default CustomizeCarousel;","map":{"version":3,"sources":["/Users/wangweian/Desktop/saliejung/component/Public/Carousel02.js"],"names":["React","Grid","ArrowBackIosIcon","ArrowForwardIosIcon","Button","PlayCircleFilledIcon","RadioButtonUncheckedIcon","IconButton","CustomizeCarousel","Component","constructor","props","state","count","handleTimer","bind","timer","handleNext","handleBack","componentDidMount","componentWillUnmount","clearInterval","setInterval","setState","rotateBy","render","imgsrc","width","height","controlButton","navigateButton","list","i","length","push","parseInt","RadioNavigation","display","margin"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport Button from '@material-ui/core/Button';\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled';\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\nimport IconButton from '@material-ui/core/IconButton';\n\nclass CustomizeCarousel extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            count: 0\n        }\n\n        this.handleTimer = this.handleTimer.bind(this);\n        this.timer = this.timer.bind(this);\n        this.handleNext = this.handleNext.bind(this);\n        this.handleBack = this.handleBack.bind(this);\n    }\n\n    componentDidMount() {\n        this.handleTimer();\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.handleTimer);\n    }\n\n    handleTimer() {\n        setInterval(()=>{this.timer();},1000);\n    }\n\n    timer() {\n        this.setState({count: this.state.count + 1});\n    }\n\n    handleNext() {\n        if(!this.props.rotateBy) {\n            this.setState({count: this.state.count + 3})\n        }else {\n            this.setState({count: this.state.count + this.props.rotateBy})\n        }\n    }\n\n    handleBack() {\n        if(!this.props.rotateBy) {\n            if(this.state.count > 3) {\n                this.setState({count: this.state.count - 3});\n            }else {\n                this.setState({count: 0});\n            }\n        }else {\n            if(this.state.count > 3) {\n                this.setState({count: this.state.count - this.props.rotateBy})\n            }else {\n                this.setState({count: 0});\n            }\n            \n        }\n    }\n\n    render() {\n        \n        const {\n            imgsrc,\n            rotateBy,\n            width,\n            height,\n            controlButton,\n            navigateButton\n        } = this.props;\n\n        const list = [];\n\n        if(!imgsrc) {\n            return list\n        }else {\n            if(!rotateBy) {\n                for(let i = 0; i <= imgsrc.length - 1; i++) {\n                    list.push(\n                        <div key={i}>\n                            {parseInt( this.state.count / 3) % imgsrc.length === i ?\n                                <div style={{width:width?width:'600px', height:height?height:'500px'}}>\n                                    <img src={imgsrc[i]} style={{ width:'100%', height:'100%'}}/>\n                                </div>\n                            :''}        \n                        </div>\n                    )\n                }\n            }else {\n                for(let i = 0; i <= imgsrc.length - 1; i++) {\n                    list.push(\n                        <div key={i}>\n                            {parseInt( this.state.count / rotateBy) % imgsrc.length === i ?\n                                <div style={{width:width?width:'600px', height:height?height:'500px'}}>\n                                    <img src={imgsrc[i]} style={{width:'100%', height:'100%'}}/>\n                                </div>\n                            :''}        \n                        </div>\n                    )\n                }\n            }\n        }\n    \n        const RadioNavigation = [];\n\n        if(!imgsrc) {\n            return RadioNavigation\n        }else {\n            if(!rotateBy) {\n                for(let i = 0; i <= imgsrc.length - 1; i++) {\n                    RadioNavigation.push(\n                        <div key={i} style={{display:'inline'}}>\n                            {parseInt( this.state.count / 3) % imgsrc.length === i ?\n                                <IconButton onClick={()=>{this.setState({count: 3 * i})}}>\n                                    <PlayCircleFilledIcon/>\n                                </IconButton>\n                            :\n                                <IconButton onClick={()=>{this.setState({count: 3 * i})}}>\n                                    <RadioButtonUncheckedIcon/>\n                                </IconButton>\n                            }\n                        </div>\n                    )\n                }\n            }else {\n                for(let i = 0; i <= imgsrc.length - 1; i++) {\n                    RadioNavigation.push(\n                        <div key={i} style={{display:'inline'}}>\n                            {parseInt( this.state.count / rotateBy) % imgsrc.length === i ?\n                                <IconButton onClick={()=>{this.setState({count: rotateBy * i})}}>\n                                    <PlayCircleFilledIcon/>\n                                </IconButton>\n                            :\n                                <IconButton onClick={()=>{this.setState({count: rotateBy * i})}}>\n                                    <RadioButtonUncheckedIcon/>\n                                </IconButton>\n                            }\n                        </div>\n                    )\n                }\n            }\n        }\n\n        return(\n            <React.Fragment>\n\n                <Grid container justify=\"center\" alignItems=\"center\">\n                \n                <Grid contaner>\n                    <Grid item xs={1}>\n                        {controlButton === true ?\n                            <Button style={{margin:'auto 0'}} onClick={this.handleBack}>\n                                <ArrowBackIosIcon/>\n                            </Button>\n                        :''}\n                    </Grid>\n\n                    <Grid item xs={10}>\n                       {list} \n                    </Grid>\n                    \n                    <Grid item xs={1}>\n                        {controlButton === true ?\n                            <Button style={{margin:'auto 0'}} onClick={this.handleNext}>\n                                <ArrowForwardIosIcon/>\n                            </Button>\n                        :''}\n                    </Grid>\n                </Grid>\n\n            </Grid>\n\n            <Grid container justify=\"center\" alignItems=\"center\">\n            {navigateButton === true ?\n                <Grid item xs={8}>\n                \n                    {RadioNavigation}\n                \n                </Grid>\n            :''}\n            </Grid>\n\n\n            </React.Fragment>\n        )\n    }\n}\n\nexport default CustomizeCarousel;"]},"metadata":{},"sourceType":"module"}