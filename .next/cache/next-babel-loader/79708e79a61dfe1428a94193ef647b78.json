{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/wangweian/Desktop/saliejung/component/Public/Carousel02.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport Button from '@material-ui/core/Button';\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled';\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\nimport IconButton from '@material-ui/core/IconButton';\n\nvar CustomizeCarousel = /*#__PURE__*/function (_React$Component) {\n  _inherits(CustomizeCarousel, _React$Component);\n\n  var _super = _createSuper(CustomizeCarousel);\n\n  function CustomizeCarousel(props) {\n    var _this;\n\n    _classCallCheck(this, CustomizeCarousel);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      count: 0\n    };\n    _this.handleTimer = _this.handleTimer.bind(_assertThisInitialized(_this));\n    _this.timer = _this.timer.bind(_assertThisInitialized(_this));\n    _this.handleNext = _this.handleNext.bind(_assertThisInitialized(_this));\n    _this.handleBack = _this.handleBack.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(CustomizeCarousel, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.handleTimer();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.handleTimer);\n    }\n  }, {\n    key: \"handleTimer\",\n    value: function handleTimer() {\n      var _this2 = this;\n\n      setInterval(function () {\n        _this2.timer();\n      }, 1000);\n    }\n  }, {\n    key: \"timer\",\n    value: function timer() {\n      this.setState({\n        count: this.state.count + 1\n      });\n    }\n  }, {\n    key: \"handleNext\",\n    value: function handleNext() {\n      if (!this.props.rotateBy) {\n        this.setState({\n          count: this.state.count + 3\n        });\n      } else {\n        this.setState({\n          count: this.state.count + this.props.rotateBy\n        });\n      }\n    }\n  }, {\n    key: \"handleBack\",\n    value: function handleBack() {\n      if (!this.props.rotateBy) {\n        if (this.state.count > 3) {\n          this.setState({\n            count: this.state.count - 3\n          });\n        } else {\n          this.setState({\n            count: 0\n          });\n        }\n      } else {\n        if (this.state.count > 3) {\n          this.setState({\n            count: this.state.count - this.props.rotateBy\n          });\n        } else {\n          this.setState({\n            count: 0\n          });\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props = this.props,\n          imgsrc = _this$props.imgsrc,\n          rotateBy = _this$props.rotateBy,\n          width = _this$props.width,\n          height = _this$props.height,\n          controlButton = _this$props.controlButton,\n          navigateButton = _this$props.navigateButton;\n      var list = [];\n\n      if (!imgsrc) {\n        return list;\n      } else {\n        if (!rotateBy) {\n          for (var i = 0; i <= imgsrc.length - 1; i++) {\n            list.push(__jsx(\"div\", {\n              key: i,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 25\n              }\n            }, parseInt(this.state.count / 3) % imgsrc.length === i ? __jsx(\"div\", {\n              style: {\n                width: width ? width : '600px',\n                height: height ? height : '500px'\n              },\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 33\n              }\n            }, __jsx(\"img\", {\n              src: imgsrc[i],\n              style: {\n                width: '100%',\n                height: '100%'\n              },\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 37\n              }\n            })) : ''));\n          }\n        } else {\n          for (var _i = 0; _i <= imgsrc.length - 1; _i++) {\n            list.push(__jsx(\"div\", {\n              key: _i,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 25\n              }\n            }, parseInt(this.state.count / rotateBy) % imgsrc.length === _i ? __jsx(\"div\", {\n              style: {\n                width: width ? width : '600px',\n                height: height ? height : '500px'\n              },\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 33\n              }\n            }, __jsx(\"img\", {\n              src: imgsrc[_i],\n              style: {\n                width: '100%',\n                height: '100%'\n              },\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 37\n              }\n            })) : ''));\n          }\n        }\n      }\n\n      var RadioNavigation = [];\n\n      if (!imgsrc) {\n        return RadioNavigation;\n      } else {\n        if (!rotateBy) {\n          var _loop = function _loop(_i2) {\n            RadioNavigation.push(__jsx(\"div\", {\n              key: _i2,\n              style: {\n                display: 'inline'\n              },\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 25\n              }\n            }, parseInt(_this3.state.count / 3) % imgsrc.length === _i2 ? __jsx(IconButton, {\n              onClick: function onClick() {\n                _this3.setState({\n                  count: 3 * _i2\n                });\n              },\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 33\n              }\n            }, __jsx(PlayCircleFilledIcon, {\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 37\n              }\n            })) : __jsx(IconButton, {\n              onClick: function onClick() {\n                _this3.setState({\n                  count: 3 * _i2\n                });\n              },\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 33\n              }\n            }, __jsx(RadioButtonUncheckedIcon, {\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 37\n              }\n            }))));\n          };\n\n          for (var _i2 = 0; _i2 <= imgsrc.length - 1; _i2++) {\n            _loop(_i2);\n          }\n        } else {\n          var _loop2 = function _loop2(_i3) {\n            RadioNavigation.push(__jsx(\"div\", {\n              key: _i3,\n              style: {\n                display: 'inline'\n              },\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 25\n              }\n            }, parseInt(_this3.state.count / rotateBy) % imgsrc.length === _i3 ? __jsx(IconButton, {\n              onClick: function onClick() {\n                _this3.setState({\n                  count: rotateBy * _i3\n                });\n              },\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 33\n              }\n            }, __jsx(PlayCircleFilledIcon, {\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 37\n              }\n            })) : __jsx(IconButton, {\n              onClick: function onClick() {\n                _this3.setState({\n                  count: rotateBy * _i3\n                });\n              },\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 33\n              }\n            }, __jsx(RadioButtonUncheckedIcon, {\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 37\n              }\n            }))));\n          };\n\n          for (var _i3 = 0; _i3 <= imgsrc.length - 1; _i3++) {\n            _loop2(_i3);\n          }\n        }\n      }\n\n      return __jsx(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }\n      }, __jsx(Grid, {\n        container: true,\n        justify: \"center\",\n        alignItems: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 17\n        }\n      }, __jsx(Grid, {\n        container: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 17\n        }\n      }, __jsx(Grid, {\n        item: true,\n        xs: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }\n      }, controlButton === true ? __jsx(Button, {\n        style: {\n          margin: 'auto 0'\n        },\n        onClick: this.handleBack,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 29\n        }\n      }, __jsx(ArrowBackIosIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 33\n        }\n      })) : ''), __jsx(Grid, {\n        item: true,\n        xs: 10,\n        justify: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }\n      }, list), __jsx(Grid, {\n        item: true,\n        xs: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }\n      }, controlButton === true ? __jsx(Button, {\n        style: {\n          margin: 'auto 0'\n        },\n        onClick: this.handleNext,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 29\n        }\n      }, __jsx(ArrowForwardIosIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 33\n        }\n      })) : ''))), navigateButton === true ? __jsx(Grid, {\n        container: true,\n        justify: \"center\",\n        alignItems: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 17\n        }\n      }, RadioNavigation) : '');\n    }\n  }]);\n\n  return CustomizeCarousel;\n}(React.Component);\n\nexport default CustomizeCarousel;","map":{"version":3,"sources":["/Users/wangweian/Desktop/saliejung/component/Public/Carousel02.js"],"names":["React","Grid","ArrowBackIosIcon","ArrowForwardIosIcon","Button","PlayCircleFilledIcon","RadioButtonUncheckedIcon","IconButton","CustomizeCarousel","props","state","count","handleTimer","bind","timer","handleNext","handleBack","clearInterval","setInterval","setState","rotateBy","imgsrc","width","height","controlButton","navigateButton","list","i","length","push","parseInt","RadioNavigation","display","margin","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport Button from '@material-ui/core/Button';\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled';\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\nimport IconButton from '@material-ui/core/IconButton';\n\nclass CustomizeCarousel extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            count: 0\n        }\n\n        this.handleTimer = this.handleTimer.bind(this);\n        this.timer = this.timer.bind(this);\n        this.handleNext = this.handleNext.bind(this);\n        this.handleBack = this.handleBack.bind(this);\n    }\n\n    componentDidMount() {\n        this.handleTimer();\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.handleTimer);\n    }\n\n    handleTimer() {\n        setInterval(()=>{this.timer();},1000);\n    }\n\n    timer() {\n        this.setState({count: this.state.count + 1});\n    }\n\n    handleNext() {\n        if(!this.props.rotateBy) {\n            this.setState({count: this.state.count + 3})\n        }else {\n            this.setState({count: this.state.count + this.props.rotateBy})\n        }\n    }\n\n    handleBack() {\n        if(!this.props.rotateBy) {\n            if(this.state.count > 3) {\n                this.setState({count: this.state.count - 3});\n            }else {\n                this.setState({count: 0});\n            }\n        }else {\n            if(this.state.count > 3) {\n                this.setState({count: this.state.count - this.props.rotateBy})\n            }else {\n                this.setState({count: 0});\n            }\n            \n        }\n    }\n\n    render() {\n        \n        const {\n            imgsrc,\n            rotateBy,\n            width,\n            height,\n            controlButton,\n            navigateButton\n        } = this.props;\n\n        const list = [];\n\n        if(!imgsrc) {\n            return list\n        }else {\n            if(!rotateBy) {\n                for(let i = 0; i <= imgsrc.length - 1; i++) {\n                    list.push(\n                        <div key={i}>\n                            {parseInt( this.state.count / 3) % imgsrc.length === i ?\n                                <div style={{width:width?width:'600px', height:height?height:'500px'}}>\n                                    <img src={imgsrc[i]} style={{ width:'100%', height:'100%'}}/>\n                                </div>\n                            :''}        \n                        </div>\n                    )\n                }\n            }else {\n                for(let i = 0; i <= imgsrc.length - 1; i++) {\n                    list.push(\n                        <div key={i}>\n                            {parseInt( this.state.count / rotateBy) % imgsrc.length === i ?\n                                <div style={{width:width?width:'600px', height:height?height:'500px'}}>\n                                    <img src={imgsrc[i]} style={{width:'100%', height:'100%'}}/>\n                                </div>\n                            :''}        \n                        </div>\n                    )\n                }\n            }\n        }\n    \n        const RadioNavigation = [];\n\n        if(!imgsrc) {\n            return RadioNavigation\n        }else {\n            if(!rotateBy) {\n                for(let i = 0; i <= imgsrc.length - 1; i++) {\n                    RadioNavigation.push(\n                        <div key={i} style={{display:'inline'}}>\n                            {parseInt( this.state.count / 3) % imgsrc.length === i ?\n                                <IconButton onClick={()=>{this.setState({count: 3 * i})}}>\n                                    <PlayCircleFilledIcon/>\n                                </IconButton>\n                            :\n                                <IconButton onClick={()=>{this.setState({count: 3 * i})}}>\n                                    <RadioButtonUncheckedIcon/>\n                                </IconButton>\n                            }\n                        </div>\n                    )\n                }\n            }else {\n                for(let i = 0; i <= imgsrc.length - 1; i++) {\n                    RadioNavigation.push(\n                        <div key={i} style={{display:'inline'}}>\n                            {parseInt( this.state.count / rotateBy) % imgsrc.length === i ?\n                                <IconButton onClick={()=>{this.setState({count: rotateBy * i})}}>\n                                    <PlayCircleFilledIcon/>\n                                </IconButton>\n                            :\n                                <IconButton onClick={()=>{this.setState({count: rotateBy * i})}}>\n                                    <RadioButtonUncheckedIcon/>\n                                </IconButton>\n                            }\n                        </div>\n                    )\n                }\n            }\n        }\n\n        return(\n            <React.Fragment>\n\n                <Grid container justify=\"center\" alignItems=\"center\">\n                \n                <Grid container>\n                    <Grid item xs={1}>\n                        {controlButton === true ?\n                            <Button style={{margin:'auto 0'}} onClick={this.handleBack}>\n                                <ArrowBackIosIcon/>\n                            </Button>\n                        :''}\n                    </Grid>\n\n                    <Grid item xs={10} justify=\"center\">\n                       {list} \n                    </Grid>\n                    \n                    <Grid item xs={1}>\n                        {controlButton === true ?\n                            <Button style={{margin:'auto 0'}} onClick={this.handleNext}>\n                                <ArrowForwardIosIcon/>\n                            </Button>\n                        :''}\n                    </Grid>\n                </Grid>\n\n            </Grid>\n\n            {navigateButton === true ?\n                <Grid container justify=\"center\" alignItems=\"center\">\n                \n                    {RadioNavigation}\n                \n                </Grid>\n            :''}\n\n\n            </React.Fragment>\n        )\n    }\n}\n\nexport default CustomizeCarousel;"]},"metadata":{},"sourceType":"module"}