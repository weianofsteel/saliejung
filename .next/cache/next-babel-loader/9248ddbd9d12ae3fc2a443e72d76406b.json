{"ast":null,"code":"var _jsxFileName = \"/Users/wangweian/Desktop/saliejung-portfolio/pages/Writing/Writing.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport { recaptchaKey } from '../../component/config';\nconst useStyles = makeStyles(theme => ({\n  title: {\n    color: \"blue\",\n    fontFamily: \"Asap\",\n    fontSize: \"60px\"\n  }\n}));\n\nconst Writing = () => {\n  const classes = useStyles();\n  const [recaptchaToken, setRecaptchaToken] = React.useState(\"\");\n\n  const reCaptchaOnChange = value => {\n    setRecaptchaToken(value);\n  };\n\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, \"Writing\"), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, __jsx(ReCAPTCHA, {\n    required: true,\n    sitekey: recaptchaKey,\n    size: \"large\",\n    badge: \"inline\",\n    hl: \"zh-TW\",\n    onChange: reCaptchaOnChange,\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  })));\n};\n\nexport default Writing;","map":{"version":3,"sources":["/Users/wangweian/Desktop/saliejung-portfolio/pages/Writing/Writing.js"],"names":["React","ReactDOM","makeStyles","ReCAPTCHA","recaptchaKey","useStyles","theme","title","color","fontFamily","fontSize","Writing","classes","recaptchaToken","setRecaptchaToken","useState","reCaptchaOnChange","value","width"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAASC,YAAT,QAA6B,wBAA7B;AAEA,MAAMC,SAAS,GAAGH,UAAU,CAAEI,KAAD,KAAY;AACrCC,EAAAA,KAAK,EAAC;AACFC,IAAAA,KAAK,EAAC,MADJ;AAEFC,IAAAA,UAAU,EAAC,MAFT;AAGFC,IAAAA,QAAQ,EAAC;AAHP;AAD+B,CAAZ,CAAD,CAA5B;;AAQA,MAAMC,OAAO,GAAG,MAAM;AAElB,QAAMC,OAAO,GAAGP,SAAS,EAAzB;AAEA,QAAM,CAACQ,cAAD,EAAiBC,iBAAjB,IAAsCd,KAAK,CAACe,QAAN,CAAe,EAAf,CAA5C;;AAEA,QAAMC,iBAAiB,GAAIC,KAAD,IAAW;AACjCH,IAAAA,iBAAiB,CAACG,KAAD,CAAjB;AACH,GAFD;;AAIA,SACI,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAEL,OAAO,CAACL,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,MAAC,SAAD;AACI,IAAA,QAAQ,MADZ;AAEI,IAAA,OAAO,EAAEH,YAFb;AAGI,IAAA,IAAI,EAAC,OAHT;AAII,IAAA,KAAK,EAAC,QAJV;AAKI,IAAA,EAAE,EAAC,OALP;AAMI,IAAA,QAAQ,EAAEY,iBANd;AAOI,IAAA,KAAK,EAAE;AAACE,MAAAA,KAAK,EAAC;AAAP,KAPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CAJJ,CADJ;AAkBH,CA5BD;;AA8BA,eAAeP,OAAf","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport { recaptchaKey } from '../../component/config';\n\nconst useStyles = makeStyles((theme) => ({\n    title:{\n        color:\"blue\",\n        fontFamily:\"Asap\",\n        fontSize:\"60px\"\n    }\n}));\n\nconst Writing = () => {\n    \n    const classes = useStyles();\n\n    const [recaptchaToken, setRecaptchaToken] = React.useState(\"\");\n\n    const reCaptchaOnChange = (value) => {\n        setRecaptchaToken(value);\n    }\n\n    return(\n        <React.Fragment>\n            <div className={classes.title}>\n                Writing\n            </div>\n            <div>\n            <ReCAPTCHA\n                required\n                sitekey={recaptchaKey}\n                size=\"large\"\n                badge=\"inline\"\n                hl=\"zh-TW\"\n                onChange={reCaptchaOnChange}\n                style={{width:\"100%\"}}\n            />\n            </div>\n        </React.Fragment>\n    )\n}\n\nexport default Writing;"]},"metadata":{},"sourceType":"module"}