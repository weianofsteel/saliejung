{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/wangweian/Desktop/saliejung/component/Public/Scrollup.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport { makeStyles } from '@material-ui/core/styles';\nvar useStyles = makeStyles({\n  icon: {\n    fontSize: '4rem',\n    color: '#8F8F8F',\n    \"&:hover\": {\n      color: '#1F1F1F'\n    }\n  }\n});\nexport var Scrollup = function Scrollup(props) {\n  _s();\n\n  var classes = useStyles();\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      scrollC = _React$useState2[0],\n      setScrollC = _React$useState2[1];\n\n  useEffect(function () {\n    window.addEventListener(\"scroll\", onScroll);\n\n    function onScroll() {\n      setScrollC(window.scrollY);\n    }\n  }, []);\n\n  var handleScrolltoTop = function handleScrolltoTop() {\n    if (window !== undefined) {\n      window.scrollTo({\n        top: 0,\n        behavior: 'smooth'\n      });\n    }\n  };\n\n  return __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    container: true,\n    style: {\n      align: 'right'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 11,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }), __jsx(Grid, {\n    item: true,\n    xs: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, scrollC > 400 ? __jsx(Button, {\n    onClick: handleScrolltoTop,\n    style: {\n      backgroundColor: 'transparent'\n    },\n    disableRipple: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 25\n    }\n  }, __jsx(ExpandLessIcon, {\n    className: classes.icon,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 29\n    }\n  })) : '')));\n};\n\n_s(Scrollup, \"CjupTK/2+ZruPE5WsOfz7FP9ufQ=\", false, function () {\n  return [useStyles];\n});\n\n_c = Scrollup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Scrollup\");","map":{"version":3,"sources":["/Users/wangweian/Desktop/saliejung/component/Public/Scrollup.js"],"names":["React","useEffect","Grid","Button","ExpandLessIcon","makeStyles","useStyles","icon","fontSize","color","Scrollup","props","classes","useState","scrollC","setScrollC","window","addEventListener","onScroll","scrollY","handleScrolltoTop","undefined","scrollTo","top","behavior","align","backgroundColor"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,IAAMC,SAAS,GAAGD,UAAU,CAAC;AACzBE,EAAAA,IAAI,EAAE;AACFC,IAAAA,QAAQ,EAAC,MADP;AAEFC,IAAAA,KAAK,EAAC,SAFJ;AAGF,eAAU;AACNA,MAAAA,KAAK,EAAC;AADA;AAHR;AADmB,CAAD,CAA5B;AAWA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AAAA;;AAE/B,MAAMC,OAAO,GAAGN,SAAS,EAAzB;;AAF+B,wBAIDN,KAAK,CAACa,QAAN,CAAe,CAAf,CAJC;AAAA;AAAA,MAIxBC,OAJwB;AAAA,MAIfC,UAJe;;AAM/Bd,EAAAA,SAAS,CAAC,YAAI;AACVe,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCC,QAAlC;;AACA,aAASA,QAAT,GAAoB;AAChBH,MAAAA,UAAU,CAACC,MAAM,CAACG,OAAR,CAAV;AACH;AACJ,GALQ,EAKP,EALO,CAAT;;AAOA,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC5B,QAAGJ,MAAM,KAAKK,SAAd,EAAyB;AACrBL,MAAAA,MAAM,CAACM,QAAP,CAAgB;AAACC,QAAAA,GAAG,EAAE,CAAN;AAASC,QAAAA,QAAQ,EAAE;AAAnB,OAAhB;AACH;AACJ,GAJD;;AAMA,SACI,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAC;AAAP,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAGI,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEKX,OAAO,GAAG,GAAV,GACG,MAAC,MAAD;AACI,IAAA,OAAO,EAAEM,iBADb;AAEI,IAAA,KAAK,EAAE;AAACM,MAAAA,eAAe,EAAE;AAAlB,KAFX;AAGI,IAAA,aAAa,EAAE,IAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI,MAAC,cAAD;AAAgB,IAAA,SAAS,EAAEd,OAAO,CAACL,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADH,GAOa,EATlB,CAHJ,CADJ,CADJ;AAsBH,CAzCM;;GAAMG,Q;UAEOJ,S;;;KAFPI,Q","sourcesContent":["import React, { useEffect } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n    icon: {\n        fontSize:'4rem',\n        color:'#8F8F8F',\n        \"&:hover\":{\n            color:'#1F1F1F'\n        }\n    }\n});\n\n\nexport const Scrollup = (props) => {\n    \n    const classes = useStyles();\n\n    const [scrollC, setScrollC] = React.useState(0);\n\n    useEffect(()=>{\n        window.addEventListener(\"scroll\", onScroll);\n        function onScroll() {\n            setScrollC(window.scrollY);\n        }  \n    },[])\n\n    const handleScrolltoTop = () => {\n        if(window !== undefined) {\n            window.scrollTo({top: 0, behavior: 'smooth'})\n        }\n    }\n\n    return(\n        <React.Fragment>\n            <Grid container style={{align:'right'}}>\n                <Grid item xs={11}></Grid>\n                \n                <Grid item xs={1}>\n                    \n                    {scrollC > 400 ?\n                        <Button \n                            onClick={handleScrolltoTop}\n                            style={{backgroundColor: 'transparent'}}\n                            disableRipple={true}\n                        >\n                            <ExpandLessIcon className={classes.icon}/>\n                        </Button>:''\n                    }\n\n                </Grid>\n\n            </Grid>\n        </React.Fragment>\n    )\n}"]},"metadata":{},"sourceType":"module"}